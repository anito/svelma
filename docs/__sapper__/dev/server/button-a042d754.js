'use strict';

var __chunk_1 = require('./chunk-7f071dbf.js');
var __chunk_2 = require('./chunk-1959450c.js');
var __chunk_3 = require('./chunk-8c7fa0c8.js');
require('clipboard');
require('./chunk-14459e5a.js');
var __chunk_5 = require('./chunk-8cfb2d5d.js');
var __chunk_6 = require('./chunk-58469ebb.js');

/* src/routes/components/button.svelte generated by Svelte v3.16.7 */

const css = {
	code: ".buttons.svelte-1uf8rcq{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-wrap:wrap;flex-wrap:wrap}",
	map: "{\"version\":3,\"file\":\"button.svelte\",\"sources\":[\"button.svelte\"],\"sourcesContent\":[\"<script context=\\\"module\\\">\\n\\texport async function preload(page, session) {\\n\\t\\tconst res = await this.fetch(`components/button.json`);\\n    const jsdoc = await res.json();\\n\\n\\t\\treturn { jsdoc };\\n\\t}\\n</script>\\n\\n<script>\\n  import { onMount } from 'svelte'\\n  import { Button, Icon } from 'svelma'\\n  import DocHeader from '../../components/DocHeader.svelte'\\n  import Example from '../../components/Example.svelte'\\n  import JSDoc from '../../components/JSDoc.svelte'\\n\\n  export let jsdoc\\n\\n  let counter = 0\\n</script>\\n\\n<style>\\n  .buttons {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-pack: start;\\n        -ms-flex-pack: start;\\n            justify-content: flex-start;\\n    -ms-flex-wrap: wrap;\\n        flex-wrap: wrap;\\n  }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9yb3V0ZXMvY29tcG9uZW50cy9idXR0b24uc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7RUFDRTtJQUNFLG9CQUFhO0lBQWIsb0JBQWE7SUFBYixhQUFhO0lBQ2IsdUJBQTJCO1FBQTNCLG9CQUEyQjtZQUEzQiwyQkFBMkI7SUFDM0IsbUJBQWU7UUFBZixlQUFlO0VBQ2pCIiwiZmlsZSI6InNyYy9yb3V0ZXMvY29tcG9uZW50cy9idXR0b24uc3ZlbHRlIiwic291cmNlc0NvbnRlbnQiOlsiXG4gIC5idXR0b25zIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIH1cbiJdfQ== */</style>\\n\\n<DocHeader title=\\\"Buttons\\\" subtitle=\\\"Tasty clickable buttons\\\" />\\n\\n<Example code={`<script>\\n  import { Button } from 'svelma'\\n\\n  let counter = 0\\n</script>\\n\\n<Button type=\\\"is-primary\\\" on:click={() => counter++}>\\n  Click!: {counter}\\n</Button>`}>\\n  <div slot=\\\"preview\\\">\\n    <Button type=\\\"is-primary\\\" on:click={() => counter++}>\\n      Click!: {counter}\\n    </Button>\\n  </div>\\n</Example>\\n\\n<hr class=\\\"is-medium\\\">\\n\\n<p class=\\\"title is-4\\\">States and styles</p>\\n\\n<Example code={`<script>\\n  import { Button } from 'svelma'\\n</script>\\n\\n<div class=\\\"buttons\\\">\\n  <Button type=\\\"is-primary\\\">Primary</Button>\\n  <Button type=\\\"is-success\\\">Success</Button>\\n  <Button type=\\\"is-danger\\\">Danger</Button>\\n  <Button type=\\\"is-warning\\\">Warning</Button>\\n  <Button type=\\\"is-info\\\">Info</Button>\\n  <Button type=\\\"is-link\\\">Link</Button>\\n  <Button type=\\\"is-light\\\">Light</Button>\\n  <Button type=\\\"is-dark\\\">Dark</Button>\\n  <Button type=\\\"is-text\\\">Text</Button>\\n</div>\\n<div class=\\\"buttons\\\">\\n  <Button disabled>Disabled</Button>\\n  <Button type=\\\"is-primary\\\" loading>Loading</Button>\\n  <Button type=\\\"is-success\\\" rounded>Rounded</Button>\\n  <Button type=\\\"is-info\\\" outline>Outlined</Button>\\n</div>\\n<div class=\\\"buttons\\\">\\n  <div class=\\\"notification is-primary\\\">\\n    <Button type=\\\"is-primary\\\" inverted>Inverted</Button>\\n    <Button type=\\\"is-primary\\\" inverted outlined>Invert Outlined</Button>\\n  </div>\\n</div>`}>\\n  <div slot=\\\"preview\\\">\\n    <div class=\\\"buttons\\\">\\n      <Button type=\\\"is-primary\\\">Primary</Button>\\n      <Button type=\\\"is-success\\\">Success</Button>\\n      <Button type=\\\"is-danger\\\">Danger</Button>\\n      <Button type=\\\"is-warning\\\">Warning</Button>\\n      <Button type=\\\"is-info\\\">Info</Button>\\n      <Button type=\\\"is-link\\\">Link</Button>\\n      <Button type=\\\"is-light\\\">Light</Button>\\n      <Button type=\\\"is-dark\\\">Dark</Button>\\n      <Button type=\\\"is-text\\\">Text</Button>\\n    </div>\\n    <div class=\\\"buttons\\\">\\n      <Button disabled>Disabled</Button>\\n      <Button type=\\\"is-primary\\\" loading>Loading</Button>\\n      <Button type=\\\"is-success\\\" rounded>Rounded</Button>\\n      <Button type=\\\"is-info\\\" outline>Outlined</Button>\\n    </div>\\n    <div class=\\\"buttons\\\">\\n      <div class=\\\"notification is-primary\\\">\\n        <Button type=\\\"is-primary\\\" inverted>Inverted</Button>\\n        <Button type=\\\"is-primary\\\" inverted outlined>Invert Outlined</Button>\\n      </div>\\n    </div>\\n  </div>\\n</Example>\\n\\n<hr class=\\\"is-medium\\\">\\n\\n<p class=\\\"title is-4\\\">Sizes</p>\\n\\n<Example code={`<script>\\n  import { Button } from 'svelma'\\n</script>\\n\\n<div class=\\\"buttons\\\">\\n  <Button size=\\\"is-small\\\">Small</Button>\\n  <Button>Default</Button>\\n  <Button size=\\\"is-medium\\\">Medium</Button>\\n  <Button size=\\\"is-large\\\">Large</Button>\\n</div>`}>\\n  <div slot=\\\"preview\\\">\\n    <div class=\\\"buttons\\\">\\n      <Button size=\\\"is-small\\\">Small</Button>\\n      <Button>Default</Button>\\n      <Button size=\\\"is-medium\\\">Medium</Button>\\n      <Button size=\\\"is-large\\\">Large</Button>\\n    </div>\\n  </div>\\n</Example>\\n\\n<hr class=\\\"is-medium\\\">\\n\\n<p class=\\\"title is-4\\\">Icons</p>\\n\\n<Example code={`<script>\\n  import { Button, Icon } from 'svelma'\\n</script>\\n\\n<div class=\\\"buttons\\\">\\n  <Button>\\n    <Icon icon=\\\"bold\\\" />\\n  </Button>\\n  <Button>\\n    <Icon icon=\\\"underline\\\" />\\n  </Button>\\n  <Button>\\n    <Icon icon=\\\"italic\\\" />\\n  </Button>\\n</div>\\n<div class=\\\"buttons\\\">\\n  <Button iconPack=\\\"fab\\\" iconLeft=\\\"github\\\">GitHub</Button>\\n  <Button type=\\\"is-primary\\\" iconPack=\\\"fab\\\" iconLeft=\\\"twitter\\\">Twitter</Button>\\n  <Button type=\\\"is-success\\\" iconPack=\\\"fa\\\" iconLeft=\\\"check\\\">Save</Button>\\n  <Button type=\\\"is-danger\\\" outline iconPack=\\\"fa\\\" iconRight=\\\"times\\\">Delete</Button>\\n</div>\\n<div class=\\\"buttons\\\">\\n  <Button size=\\\"is-small\\\" iconPack=\\\"fab\\\" iconLeft=\\\"github\\\">GitHub</Button>\\n  <Button iconLeft=\\\"github\\\" iconPack=\\\"fab\\\">GitHub</Button>\\n  <Button size=\\\"is-medium\\\" iconPack=\\\"fab\\\" iconLeft=\\\"github\\\">GitHub</Button>\\n  <Button size=\\\"is-large\\\" iconPack=\\\"fab\\\" iconLeft=\\\"github\\\">GitHub</Button>\\n</div>`}>\\n  <div slot=\\\"preview\\\">\\n    <div class=\\\"buttons\\\">\\n      <Button>\\n        <Icon icon=\\\"bold\\\" />\\n      </Button>\\n      <Button>\\n        <Icon icon=\\\"underline\\\" />\\n      </Button>\\n      <Button>\\n        <Icon icon=\\\"italic\\\" />\\n      </Button>\\n    </div>\\n    <div class=\\\"buttons\\\">\\n      <Button iconPack=\\\"fab\\\" iconLeft=\\\"github\\\">GitHub</Button>\\n      <Button type=\\\"is-primary\\\" iconPack=\\\"fab\\\" iconLeft=\\\"twitter\\\">Twitter</Button>\\n      <Button type=\\\"is-success\\\" iconPack=\\\"fa\\\" iconLeft=\\\"check\\\">Save</Button>\\n      <Button type=\\\"is-danger\\\" outline iconPack=\\\"fa\\\" iconRight=\\\"times\\\">Delete</Button>\\n    </div>\\n    <div class=\\\"buttons\\\">\\n      <Button size=\\\"is-small\\\" iconPack=\\\"fab\\\" iconLeft=\\\"github\\\">GitHub</Button>\\n      <Button iconLeft=\\\"github\\\" iconPack=\\\"fab\\\">GitHub</Button>\\n      <Button size=\\\"is-medium\\\" iconPack=\\\"fab\\\" iconLeft=\\\"github\\\">GitHub</Button>\\n      <Button size=\\\"is-large\\\" iconPack=\\\"fab\\\" iconLeft=\\\"github\\\">GitHub</Button>\\n    </div>\\n  </div>\\n</Example>\\n\\n<JSDoc {jsdoc}></JSDoc>\\n\"],\"names\":[],\"mappings\":\"AAsBE,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,WAAW,CACpB,OAAO,CAAE,WAAW,CACpB,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,KAAK,CACnB,aAAa,CAAE,KAAK,CAChB,eAAe,CAAE,UAAU,CACnC,aAAa,CAAE,IAAI,CACf,SAAS,CAAE,IAAI,AACrB,CAAC\"}"
};

async function preload(page, session) {
	const res = await this.fetch(`components/button.json`);
	const jsdoc = await res.json();
	return { jsdoc };
}

const Button_1 = __chunk_1.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { jsdoc } = $$props;
	let counter = 0;
	if ($$props.jsdoc === void 0 && $$bindings.jsdoc && jsdoc !== void 0) $$bindings.jsdoc(jsdoc);
	$$result.css.add(css);

	return `${__chunk_1.validate_component(__chunk_3.DocHeader, "DocHeader").$$render(
		$$result,
		{
			title: "Buttons",
			subtitle: "Tasty clickable buttons"
		},
		{},
		{}
	)}

${__chunk_1.validate_component(__chunk_5.Example, "Example").$$render(
		$$result,
		{
			code: `<script>
  import { Button } from 'svelma'

  let counter = 0
</script>

<Button type="is-primary" on:click={() => counter++}>
  Click!: {counter}
</Button>`
		},
		{},
		{
			preview: () => `<div slot="${"preview"}">
    ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { type: "is-primary" }, {}, {
				default: () => `
      Click!: ${__chunk_1.escape(counter)}
    `
			})}
  </div>`,
			default: () => `
  
`
		}
	)}

<hr class="${"is-medium"}">

<p class="${"title is-4"}">States and styles</p>

${__chunk_1.validate_component(__chunk_5.Example, "Example").$$render(
		$$result,
		{
			code: `<script>
  import { Button } from 'svelma'
</script>

<div class="buttons">
  <Button type="is-primary">Primary</Button>
  <Button type="is-success">Success</Button>
  <Button type="is-danger">Danger</Button>
  <Button type="is-warning">Warning</Button>
  <Button type="is-info">Info</Button>
  <Button type="is-link">Link</Button>
  <Button type="is-light">Light</Button>
  <Button type="is-dark">Dark</Button>
  <Button type="is-text">Text</Button>
</div>
<div class="buttons">
  <Button disabled>Disabled</Button>
  <Button type="is-primary" loading>Loading</Button>
  <Button type="is-success" rounded>Rounded</Button>
  <Button type="is-info" outline>Outlined</Button>
</div>
<div class="buttons">
  <div class="notification is-primary">
    <Button type="is-primary" inverted>Inverted</Button>
    <Button type="is-primary" inverted outlined>Invert Outlined</Button>
  </div>
</div>`
		},
		{},
		{
			preview: () => `<div slot="${"preview"}">
    <div class="${"buttons svelte-1uf8rcq"}">
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { type: "is-primary" }, {}, { default: () => `Primary` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { type: "is-success" }, {}, { default: () => `Success` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { type: "is-danger" }, {}, { default: () => `Danger` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { type: "is-warning" }, {}, { default: () => `Warning` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { type: "is-info" }, {}, { default: () => `Info` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { type: "is-link" }, {}, { default: () => `Link` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { type: "is-light" }, {}, { default: () => `Light` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { type: "is-dark" }, {}, { default: () => `Dark` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { type: "is-text" }, {}, { default: () => `Text` })}
    </div>
    <div class="${"buttons svelte-1uf8rcq"}">
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { disabled: true }, {}, { default: () => `Disabled` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { type: "is-primary", loading: true }, {}, { default: () => `Loading` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { type: "is-success", rounded: true }, {}, { default: () => `Rounded` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { type: "is-info", outline: true }, {}, { default: () => `Outlined` })}
    </div>
    <div class="${"buttons svelte-1uf8rcq"}">
      <div class="${"notification is-primary"}">
        ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { type: "is-primary", inverted: true }, {}, { default: () => `Inverted` })}
        ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render(
				$$result,
				{
					type: "is-primary",
					inverted: true,
					outlined: true
				},
				{},
				{ default: () => `Invert Outlined` }
			)}
      </div>
    </div>
  </div>`,
			default: () => `
  
`
		}
	)}

<hr class="${"is-medium"}">

<p class="${"title is-4"}">Sizes</p>

${__chunk_1.validate_component(__chunk_5.Example, "Example").$$render(
		$$result,
		{
			code: `<script>
  import { Button } from 'svelma'
</script>

<div class="buttons">
  <Button size="is-small">Small</Button>
  <Button>Default</Button>
  <Button size="is-medium">Medium</Button>
  <Button size="is-large">Large</Button>
</div>`
		},
		{},
		{
			preview: () => `<div slot="${"preview"}">
    <div class="${"buttons svelte-1uf8rcq"}">
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { size: "is-small" }, {}, { default: () => `Small` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, {}, {}, { default: () => `Default` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { size: "is-medium" }, {}, { default: () => `Medium` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { size: "is-large" }, {}, { default: () => `Large` })}
    </div>
  </div>`,
			default: () => `
  
`
		}
	)}

<hr class="${"is-medium"}">

<p class="${"title is-4"}">Icons</p>

${__chunk_1.validate_component(__chunk_5.Example, "Example").$$render(
		$$result,
		{
			code: `<script>
  import { Button, Icon } from 'svelma'
</script>

<div class="buttons">
  <Button>
    <Icon icon="bold" />
  </Button>
  <Button>
    <Icon icon="underline" />
  </Button>
  <Button>
    <Icon icon="italic" />
  </Button>
</div>
<div class="buttons">
  <Button iconPack="fab" iconLeft="github">GitHub</Button>
  <Button type="is-primary" iconPack="fab" iconLeft="twitter">Twitter</Button>
  <Button type="is-success" iconPack="fa" iconLeft="check">Save</Button>
  <Button type="is-danger" outline iconPack="fa" iconRight="times">Delete</Button>
</div>
<div class="buttons">
  <Button size="is-small" iconPack="fab" iconLeft="github">GitHub</Button>
  <Button iconLeft="github" iconPack="fab">GitHub</Button>
  <Button size="is-medium" iconPack="fab" iconLeft="github">GitHub</Button>
  <Button size="is-large" iconPack="fab" iconLeft="github">GitHub</Button>
</div>`
		},
		{},
		{
			preview: () => `<div slot="${"preview"}">
    <div class="${"buttons svelte-1uf8rcq"}">
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, {}, {}, {
				default: () => `
        ${__chunk_1.validate_component(__chunk_2.Icon, "Icon").$$render($$result, { icon: "bold" }, {}, {})}
      `
			})}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, {}, {}, {
				default: () => `
        ${__chunk_1.validate_component(__chunk_2.Icon, "Icon").$$render($$result, { icon: "underline" }, {}, {})}
      `
			})}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, {}, {}, {
				default: () => `
        ${__chunk_1.validate_component(__chunk_2.Icon, "Icon").$$render($$result, { icon: "italic" }, {}, {})}
      `
			})}
    </div>
    <div class="${"buttons svelte-1uf8rcq"}">
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { iconPack: "fab", iconLeft: "github" }, {}, { default: () => `GitHub` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render(
				$$result,
				{
					type: "is-primary",
					iconPack: "fab",
					iconLeft: "twitter"
				},
				{},
				{ default: () => `Twitter` }
			)}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render(
				$$result,
				{
					type: "is-success",
					iconPack: "fa",
					iconLeft: "check"
				},
				{},
				{ default: () => `Save` }
			)}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render(
				$$result,
				{
					type: "is-danger",
					outline: true,
					iconPack: "fa",
					iconRight: "times"
				},
				{},
				{ default: () => `Delete` }
			)}
    </div>
    <div class="${"buttons svelte-1uf8rcq"}">
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render(
				$$result,
				{
					size: "is-small",
					iconPack: "fab",
					iconLeft: "github"
				},
				{},
				{ default: () => `GitHub` }
			)}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render($$result, { iconLeft: "github", iconPack: "fab" }, {}, { default: () => `GitHub` })}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render(
				$$result,
				{
					size: "is-medium",
					iconPack: "fab",
					iconLeft: "github"
				},
				{},
				{ default: () => `GitHub` }
			)}
      ${__chunk_1.validate_component(__chunk_2.Button, "Button").$$render(
				$$result,
				{
					size: "is-large",
					iconPack: "fab",
					iconLeft: "github"
				},
				{},
				{ default: () => `GitHub` }
			)}
    </div>
  </div>`,
			default: () => `
  
`
		}
	)}

${__chunk_1.validate_component(__chunk_6.JSDoc, "JSDoc").$$render($$result, { jsdoc }, {}, {})}`;
});

exports.default = Button_1;
exports.preload = preload;
