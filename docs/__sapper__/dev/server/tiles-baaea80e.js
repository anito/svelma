'use strict';

var __chunk_1 = require('./chunk-7f071dbf.js');
require('./chunk-1959450c.js');
var __chunk_3 = require('./chunk-8c7fa0c8.js');
require('clipboard');
require('./chunk-14459e5a.js');
var __chunk_5 = require('./chunk-64148feb.js');

/* src/routes/bulma/tiles.svelte generated by Svelte v3.16.7 */

const css = {
	code: ".tile.svelte-1q6iq0m:not(.is-ancestor){-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.is-dragging{-webkit-transform:rotate(25deg);transform:rotate(25deg);cursor:move}",
	map: "{\"version\":3,\"file\":\"tiles.svelte\",\"sources\":[\"tiles.svelte\"],\"sourcesContent\":[\"<script>\\n  import { onDestroy, onMount } from 'svelte'\\n  import DocHeader from '../../components/DocHeader.svelte'\\n  import Example from '../../components/Example.svelte'\\n\\n  async function waitForDraggabilly() {\\n    return new Promise((resolve, reject) => {\\n      const interval = setInterval(() => {\\n        if (Draggabilly) {\\n          clearInterval(interval);\\n          resolve();\\n        }\\n      }, 250);\\n    });\\n  }\\n\\n  onMount(async () => {\\n    const draggables = document.querySelectorAll('.tile.is-child');\\n\\n    await waitForDraggabilly();\\n\\n    for (const elm of draggables) {\\n      let drag = new Draggabilly(elm, { // .tile:not(.is-ancestor)\\n        containment: '.tile.is-ancestor',\\n      });\\n    }\\n  })\\n</script>\\n\\n<style>\\n.tile:not(.is-ancestor) {\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n\\n:global(.is-dragging) {\\n  -webkit-transform: rotate(25deg);\\n          transform: rotate(25deg);\\n  cursor: move;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9yb3V0ZXMvYnVsbWEvdGlsZXMuc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLHlCQUFpQjtLQUFqQixzQkFBaUI7TUFBakIscUJBQWlCO1VBQWpCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGdDQUF3QjtVQUF4Qix3QkFBd0I7RUFDeEIsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9yb3V0ZXMvYnVsbWEvdGlsZXMuc3ZlbHRlIiwic291cmNlc0NvbnRlbnQiOlsiXG4udGlsZTpub3QoLmlzLWFuY2VzdG9yKSB7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG46Z2xvYmFsKC5pcy1kcmFnZ2luZykge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgyNWRlZyk7XG4gIGN1cnNvcjogbW92ZTtcbn1cbiJdfQ== */</style>\\n\\n<DocHeader title=\\\"Tiles\\\" subtitle=\\\"2D grids with flexbox\\\" />\\n\\n<Example code={`<script>\\n  import { onMount } from 'svelte'\\n\\n  async waitForDraggabilly() {\\n    return new Promise((resolve, reject) => {\\n      const interval = setInterval({\\n        if (Draggabilly) {\\n          clearInterval(interval);\\n          resolve();\\n        }\\n      }, 100);\\n    });\\n  }\\n\\n  onMount(async () => {\\n    const draggables = document.querySelectorAll('.tile.is-child');\\n\\n    await waitForDraggabilly();\\n\\n    for (const elm of draggables) {\\n      let drag = new Draggabilly(elm, {\\n        containment: '.tile.is-ancestor',\\n      });\\n    }\\n  })\\n</script>\\n\\n<style>\\n.tile:not(.is-ancestor) {\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n\\n:global(.is-dragging) {\\n  -webkit-transform: rotate(25deg);\\n          transform: rotate(25deg);\\n  cursor: move;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9yb3V0ZXMvYnVsbWEvdGlsZXMuc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLHlCQUFpQjtLQUFqQixzQkFBaUI7TUFBakIscUJBQWlCO1VBQWpCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGdDQUF3QjtVQUF4Qix3QkFBd0I7RUFDeEIsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9yb3V0ZXMvYnVsbWEvdGlsZXMuc3ZlbHRlIiwic291cmNlc0NvbnRlbnQiOlsiXG4udGlsZTpub3QoLmlzLWFuY2VzdG9yKSB7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG46Z2xvYmFsKC5pcy1kcmFnZ2luZykge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgyNWRlZyk7XG4gIGN1cnNvcjogbW92ZTtcbn1cbiJdfQ== */</style>\\n\\n<script src=\\\"https://unpkg.com/draggabilly@2/dist/draggabilly.pkgd.min.js\\\"></script>\\n\\n<div class=\\\"tile is-ancestor\\\">\\n  <div class=\\\"tile is-vertical is-8\\\">\\n    <div class=\\\"tile\\\">\\n      <div class=\\\"tile is-parent is-vertical\\\">\\n        <article class=\\\"tile is-child notification is-primary\\\">\\n          <p class=\\\"title\\\">Vertical...</p>\\n          <p class=\\\"subtitle\\\">Top tile</p>\\n        </article>\\n        <article class=\\\"tile is-child notification is-warning\\\">\\n          <p class=\\\"title\\\">...tiles</p>\\n          <p class=\\\"subtitle\\\">Bottom tile</p>\\n        </article>\\n      </div>\\n      <div class=\\\"tile is-parent\\\">\\n        <article class=\\\"tile is-child notification is-info\\\">\\n          <p class=\\\"title\\\">Middle tile</p>\\n          <p class=\\\"subtitle\\\">With an image</p>\\n          <figure class=\\\"image is-4by3\\\">\\n            <img src=\\\"https://bulma.io/images/placeholders/640x480.png\\\" />\\n          </figure>\\n        </article>\\n      </div>\\n    </div>\\n    <div class=\\\"tile is-parent\\\">\\n      <article class=\\\"tile is-child notification is-danger\\\">\\n        <p class=\\\"title\\\">Wide tile</p>\\n        <p class=\\\"subtitle\\\">Aligned with the right tile</p>\\n        <div class=\\\"content\\\">\\n          <!-- Content -->\\n        </div>\\n      </article>\\n    </div>\\n  </div>\\n  <div class=\\\"tile is-parent\\\">\\n    <article class=\\\"tile is-child notification is-success\\\">\\n      <div class=\\\"content\\\">\\n        <p class=\\\"title\\\">Tall tile</p>\\n        <p class=\\\"subtitle\\\">With even more content</p>\\n        <div class=\\\"content\\\">\\n          <!-- Content -->\\n        </div>\\n      </div>\\n    </article>\\n  </div>\\n</div>`}>\\n  <div slot=\\\"preview\\\">\\n    <script src=\\\"https://unpkg.com/draggabilly@2/dist/draggabilly.pkgd.min.js\\\"></script>\\n\\n    <h5 class=\\\"title\\\">Click to drag tiles</h5>\\n\\n    <div class=\\\"tile is-ancestor\\\">\\n      <div class=\\\"tile is-vertical is-8\\\">\\n        <div class=\\\"tile\\\">\\n          <div class=\\\"tile is-parent is-vertical\\\">\\n            <article class=\\\"tile is-child notification is-primary\\\">\\n              <p class=\\\"title\\\">Vertical...</p>\\n              <p class=\\\"subtitle\\\">Top tile</p>\\n            </article>\\n            <article class=\\\"tile is-child notification is-warning\\\">\\n              <p class=\\\"title\\\">...tiles</p>\\n              <p class=\\\"subtitle\\\">Bottom tile</p>\\n            </article>\\n          </div>\\n          <div class=\\\"tile is-parent\\\">\\n            <article class=\\\"tile is-child notification is-info\\\">\\n              <p class=\\\"title\\\">Middle tile</p>\\n              <p class=\\\"subtitle\\\">With an image</p>\\n              <figure class=\\\"image is-4by3\\\">\\n                <img src=\\\"https://bulma.io/images/placeholders/640x480.png\\\" alt=\\\"profile\\\" />\\n              </figure>\\n            </article>\\n          </div>\\n        </div>\\n        <div class=\\\"tile is-parent\\\">\\n          <article class=\\\"tile is-child notification is-danger\\\">\\n            <p class=\\\"title\\\">Wide tile</p>\\n            <p class=\\\"subtitle\\\">Aligned with the right tile</p>\\n            <div class=\\\"content\\\">\\n              <!-- Content -->\\n            </div>\\n          </article>\\n        </div>\\n      </div>\\n      <div class=\\\"tile is-parent\\\">\\n        <article class=\\\"tile is-child notification is-success\\\">\\n          <div class=\\\"content\\\">\\n            <p class=\\\"title\\\">Tall tile</p>\\n            <p class=\\\"subtitle\\\">With even more content</p>\\n            <div class=\\\"content\\\">\\n              <!-- Content -->\\n            </div>\\n          </div>\\n        </article>\\n      </div>\\n    </div>\\n  </div>\\n</Example>\"],\"names\":[],\"mappings\":\"AA8BA,oBAAK,KAAK,YAAY,CAAC,AAAC,CAAC,AACvB,mBAAmB,CAAE,IAAI,CACtB,gBAAgB,CAAE,IAAI,CACrB,eAAe,CAAE,IAAI,CACjB,WAAW,CAAE,IAAI,AAC3B,CAAC,AAEO,YAAY,AAAE,CAAC,AACrB,iBAAiB,CAAE,OAAO,KAAK,CAAC,CACxB,SAAS,CAAE,OAAO,KAAK,CAAC,CAChC,MAAM,CAAE,IAAI,AACd,CAAC\"}"
};

async function waitForDraggabilly() {
	return new Promise((resolve, reject) => {
			const interval = setInterval(
				() => {
					if (Draggabilly) {
						clearInterval(interval);
						resolve();
					}
				},
				250
			);
		});
}

const Tiles = __chunk_1.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	__chunk_1.onMount(async () => {
		const draggables = document.querySelectorAll(".tile.is-child");
		await waitForDraggabilly();

		for (const elm of draggables) {
			let drag = new Draggabilly(elm, { containment: ".tile.is-ancestor" });
		}
	});

	$$result.css.add(css);

	return `${__chunk_1.validate_component(__chunk_3.DocHeader, "DocHeader").$$render(
		$$result,
		{
			title: "Tiles",
			subtitle: "2D grids with flexbox"
		},
		{},
		{}
	)}

${__chunk_1.validate_component(__chunk_5.Example, "Example").$$render(
		$$result,
		{
			code: `<script>
  import { onMount } from 'svelte'

  async waitForDraggabilly() {
    return new Promise((resolve, reject) => {
      const interval = setInterval({
        if (Draggabilly) {
          clearInterval(interval);
          resolve();
        }
      }, 100);
    });
  }

  onMount(async () => {
    const draggables = document.querySelectorAll('.tile.is-child');

    await waitForDraggabilly();

    for (const elm of draggables) {
      let drag = new Draggabilly(elm, {
        containment: '.tile.is-ancestor',
      });
    }
  })
</script>

<style>
.tile:not(.is-ancestor) {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

:global(.is-dragging) {
  -webkit-transform: rotate(25deg);
          transform: rotate(25deg);
  cursor: move;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9yb3V0ZXMvYnVsbWEvdGlsZXMuc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLHlCQUFpQjtLQUFqQixzQkFBaUI7TUFBakIscUJBQWlCO1VBQWpCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGdDQUF3QjtVQUF4Qix3QkFBd0I7RUFDeEIsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9yb3V0ZXMvYnVsbWEvdGlsZXMuc3ZlbHRlIiwic291cmNlc0NvbnRlbnQiOlsiXG4udGlsZTpub3QoLmlzLWFuY2VzdG9yKSB7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG46Z2xvYmFsKC5pcy1kcmFnZ2luZykge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgyNWRlZyk7XG4gIGN1cnNvcjogbW92ZTtcbn1cbiJdfQ== */</style>

<script src="https://unpkg.com/draggabilly@2/dist/draggabilly.pkgd.min.js"></script>

<div class="tile is-ancestor">
  <div class="tile is-vertical is-8">
    <div class="tile">
      <div class="tile is-parent is-vertical">
        <article class="tile is-child notification is-primary">
          <p class="title">Vertical...</p>
          <p class="subtitle">Top tile</p>
        </article>
        <article class="tile is-child notification is-warning">
          <p class="title">...tiles</p>
          <p class="subtitle">Bottom tile</p>
        </article>
      </div>
      <div class="tile is-parent">
        <article class="tile is-child notification is-info">
          <p class="title">Middle tile</p>
          <p class="subtitle">With an image</p>
          <figure class="image is-4by3">
            <img src="https://bulma.io/images/placeholders/640x480.png" />
          </figure>
        </article>
      </div>
    </div>
    <div class="tile is-parent">
      <article class="tile is-child notification is-danger">
        <p class="title">Wide tile</p>
        <p class="subtitle">Aligned with the right tile</p>
        <div class="content">
          <!-- Content -->
        </div>
      </article>
    </div>
  </div>
  <div class="tile is-parent">
    <article class="tile is-child notification is-success">
      <div class="content">
        <p class="title">Tall tile</p>
        <p class="subtitle">With even more content</p>
        <div class="content">
          <!-- Content -->
        </div>
      </div>
    </article>
  </div>
</div>`
		},
		{},
		{
			preview: () => `<div slot="${"preview"}">
    <script src="${"https://unpkg.com/draggabilly@2/dist/draggabilly.pkgd.min.js"}"></script>

    <h5 class="${"title"}">Click to drag tiles</h5>

    <div class="${"tile is-ancestor svelte-1q6iq0m"}">
      <div class="${"tile is-vertical is-8 svelte-1q6iq0m"}">
        <div class="${"tile svelte-1q6iq0m"}">
          <div class="${"tile is-parent is-vertical svelte-1q6iq0m"}">
            <article class="${"tile is-child notification is-primary svelte-1q6iq0m"}">
              <p class="${"title"}">Vertical...</p>
              <p class="${"subtitle"}">Top tile</p>
            </article>
            <article class="${"tile is-child notification is-warning svelte-1q6iq0m"}">
              <p class="${"title"}">...tiles</p>
              <p class="${"subtitle"}">Bottom tile</p>
            </article>
          </div>
          <div class="${"tile is-parent svelte-1q6iq0m"}">
            <article class="${"tile is-child notification is-info svelte-1q6iq0m"}">
              <p class="${"title"}">Middle tile</p>
              <p class="${"subtitle"}">With an image</p>
              <figure class="${"image is-4by3"}">
                <img src="${"https://bulma.io/images/placeholders/640x480.png"}" alt="${"profile"}">
              </figure>
            </article>
          </div>
        </div>
        <div class="${"tile is-parent svelte-1q6iq0m"}">
          <article class="${"tile is-child notification is-danger svelte-1q6iq0m"}">
            <p class="${"title"}">Wide tile</p>
            <p class="${"subtitle"}">Aligned with the right tile</p>
            <div class="${"content"}">
              
            </div>
          </article>
        </div>
      </div>
      <div class="${"tile is-parent svelte-1q6iq0m"}">
        <article class="${"tile is-child notification is-success svelte-1q6iq0m"}">
          <div class="${"content"}">
            <p class="${"title"}">Tall tile</p>
            <p class="${"subtitle"}">With even more content</p>
            <div class="${"content"}">
              
            </div>
          </div>
        </article>
      </div>
    </div>
  </div>`,
			default: () => `
  
`
		}
	)}`;
});

exports.default = Tiles;
